# Copyright (C) Pipin Fitriadi - All Rights Reserved

# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential
# Written by Pipin Fitriadi <pipinfitriadi@gmail.com>, 28 August 2024

spec:
  inputs:
    infra-provider:
      description: Choose target infrastructure provider for deployment
      default: JabarCloud-v1
      options:
        - JabarCloud-v1
        - JabarCloud-v2
---
include:
  - local: templates/infra-provider/$[[ inputs.infra-provider ]].yml
stages: [Test, Deploy]
Code Quality:
  stage: Test
  image: pipelinecomponents/flake8
  variables:
    PIP_ROOT_USER_ACTION: ignore
  before_script:
    - pip install --upgrade pip
    - pip install flake8-bandit flake8-black flake8-bugbear flake8-isort
  script:
    - flake8
Dags Import Check:
  stage: Test
  rules:
    - exists:
        - airflow/dags/**/dag_*.py
      changes:
        - airflow/dags/**/dag_*.py
      if: |
        $CI_COMMIT_BRANCH == 'main' ||
        (
          "$[[ inputs.infra-provider ]]" == 'JabarCloud-v2' &&
          $CI_COMMIT_BRANCH == 'develop'
        )
  image:
    name: apache/airflow:slim-$AIRFLOW_VERSION-python3.8
    entrypoint: ['']
    docker:
      user: airflow
  variables:
    AIRFLOW__CORE__DAGS_FOLDER: airflow/dags/
  before_script:
    - airflow db init
  script:
    - if ERRORS=$(airflow dags list-import-errors) && echo "$ERRORS" && [[ $ERRORS != 'No data found' ]]; then exit 1; fi
Dags Deploy:
  stage: Deploy
  needs: [Dags Import Check]
  rules:
    - exists:
        - airflow/dags/**/dag_*.py
      changes:
        - airflow/dags/**/dag_*.py
      if: |
        $CI_COMMIT_BRANCH == 'main' ||
        (
          "$[[ inputs.infra-provider ]]" == 'JabarCloud-v2' &&
          $CI_COMMIT_BRANCH == 'develop'
        )
  image: bitnami/git:2.36.1
  variables:
    GIT_LFS_SKIP_SMUDGE: 1
  before_script:
    - COMMIT_MESSAGE=$(git show $CI_COMMIT_SHA --pretty=format:"%s%nCommit Origin":" $(git remote get-url origin | sed 's/\.git$//')/-/commit/%h" --no-patch)
    - git config --global user.email $(git show $CI_COMMIT_SHA --pretty=format:'%ae' --no-patch)
    - git config --global user.name $(git show $CI_COMMIT_SHA --pretty=format:'%an' --no-patch)
    - git config --global url.https://$GITLAB_USERNAME:$GITLAB_PASSWORD@gitlab.com.insteadOf https://gitlab.com
    - git clone --depth 1 $GIT_REPO /tmp/repo/ --single-branch --branch $GIT_BRANCH
    - cd /tmp/repo/
  script:
    - |
      if [ $(git submodule--helper list | awk '{print $4}' | grep DAG/$CI_PROJECT_NAME) ]; then
        git submodule update --init -- DAG/$CI_PROJECT_NAME
        git submodule deinit -f -- DAG/$CI_PROJECT_NAME
        git rm -f DAG/$CI_PROJECT_NAME
        rm -rf .git/modules/DAG/$CI_PROJECT_NAME/
      fi
    - rm -rf DAG/$CI_PROJECT_NAME/
    - |
      find /gcl-builds/airflow/dags/ -type f ! -name 'example.py' ! -name 'branch_example.py' -print0 | while IFS= read -r -d '' file; do
        dest_dir=DAG/$CI_PROJECT_NAME/$(dirname ${file#/gcl-builds/airflow/dags/})
        mkdir -p $dest_dir/
        cp $file $dest_dir/
      done
    - git add --all
    - |
      if [[ -n $(git status --porcelain) ]]; then
        git commit -m "$COMMIT_MESSAGE"
        git show -1 --patch-with-stat --minimal
        git push origin HEAD:$GIT_BRANCH
      fi
